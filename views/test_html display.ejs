<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
         /* Define the grid container */
         .grid_container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 0;

        }
        
        /* Define media queries for different screen sizes */
        @media (min-width: 500px ) {
            .grid_container {
                grid-template-columns: repeat(3, 1fr);
            }
        }

        @media (max-width: 80px) {
            .grid_container {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 50px) {
            .grid_container {
                grid-template-columns: 1fr;
            }
        }

        /* Define the grid item */
        .grid_item {
            display: flex;
            flex-direction: column;
            position: relative; 
            width: 100%; 
            height: 100%; 
        }

        /* Define the overlay for the grid item */
        .grid_item .overlay {
            position: absolute;
            justify-content: center;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            opacity: 0;
            background-color: rgba(0, 0, 0, 0.7);
            color: #fff;
            transition: opacity 0.3s ease-in-out;
            padding: 10px;
            box-sizing: border-box;
        }

        /* Show the overlay when the grid item is hovered */
            .grid_item:hover .overlay {
            opacity: 1;
        }

        /* Define the overlay's title */
        .grid_item .overlay h2 {
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }

        /* Define the overlay's description */
        .grid_item .overlay p {
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }

        /* Define the overlay's username */
        .grid_item .overlay span {
            font-size: 0.8rem;
        }

        /* Define the card */
        .card {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 100%;
        }

        /* Define the card's image */
        .card img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <body>
        <div class="grid_container" id="submissions_container"></div>
    
        <script>
         const submissionsContainer = document.getElementById("submissions_container");

         fetch("../data/submissions.json")
  .then((response) => response.json())
  .then((jsonData) => {
            // Loop through each user
            jsonData.users.forEach((user) => {
            // Loop through each submission for this user
            user.submissions.forEach((submission) => {
            // Create a new div element with the grid_item class
        const gridItem = document.createElement("div");
        gridItem.classList.add("grid_item");
  
        // Create a new img element and set its src, alt, width and height attributes
        const img = document.createElement("img");
        img.src = submission.image;
        img.alt = submission.title;
        img.width = 200;
        img.height = 200;
  
        // Append the img element to the grid_item div
        gridItem.appendChild(img);
  
        // Create a new div element with the overlay class
        const overlay = document.createElement("div");
        overlay.classList.add("overlay");
  
        // Set the overlay's width and height to match the image
        overlay.style.width = `${img.width}px`;
        overlay.style.height = `${img.height}px`;
  
        // Create a new h2 element with the submission title
        const title = document.createElement("h2");
        title.textContent = submission.title;
  
        // Create a new p element with the submission description
        const description = document.createElement("p");
        description.textContent = submission.description;
  
        // Create a new span element with the username
        const username = document.createElement("span");
        username.textContent = "by " + user.username;
  
        // Append the title, description, and username elements to the overlay div
        overlay.appendChild(title);
        overlay.appendChild(description);
        overlay.appendChild(username);
  
        // Append the overlay div to the grid_item div
        gridItem.appendChild(overlay);
  
        // Append the grid_item div to the submissions container
        submissionsContainer.appendChild(gridItem);
      });
    });
  });


        </script>

</body>
</html>